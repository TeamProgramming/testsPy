#!/usr/bin/python3 -O
# -*- coding: utf-8 -*-
import time
import sys
import getopt
import threading
import os
import multiprocessing

import requests

x = "150332" 
    #1503326

def pa(i):
    url = 'http://qilt.co.za/d3/svg/'
    r = requests.get(url+x+str(i)+".svg")
    if r.status_code != 404:
        print(x+str(i)+".svg"+"******** \n")
        with open(x+str(i)+".svg", 'wb') as output_file:
            output_file.write(r.text.encode('cp1251'))
def ncount( n ) : # тестовая CPU-загружающая функция
    print( x+str(1000*n)+" - "+x+str(1000*(n+1)-1)+"\n")
    for i in range(1000*n,1000*(n+1)-1): pa(i)
    print("nn = "+str(n)+"\n")

if __name__ == '__main__':

    thrnum = 10
    mode = 't' # варианты запуска

    try :
        opts, args = getopt.getopt( sys.argv[1:], "t:n:m:" )
    except getopt.GetoptError :
        print ( "недопустимая опция команды или её значение" )
    
    for opt, arg in opts :
        if opt[ 1: ] == 't' : thrnum = int( arg )

    print( "число процессоров (ядер) = {0:d}".format( multiprocessing.cpu_count() ) )
    print( "исполнение в Python версия {0:s}".format( sys.version ) )
    print( "число ветвей выполнения {0:d}".format( thrnum ) )
    if 't' in mode :
        print( "================ параллельные потоки ================" )
        threads = []
        for n in range( thrnum ) :
            tid = threading.Thread( target = ncount, args=( n, ) ) #!!!
            threads.append( tid )
            tid.setDaemon( 1 )
        clc = time.time()
        for n in range( thrnum ) : threads[ n ].start()
        for n in range( thrnum ) : threads[ n ].join()
        clc = time.time() - clc
print( "время {0:.2f} секунд".format( clc ) )
